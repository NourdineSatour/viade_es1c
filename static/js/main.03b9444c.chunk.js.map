{"version":3,"sources":["services/AbstractService.js","services/VisualizeService.js","components/utils/select/Select.js","components/containers/visualizeTracks/children/VisualizePanel.js","components/containers/visualizeTracks/VisualizeTrack.js","services/UploadService.js","components/containers/uploadTracks/children/UploadPanel.js","components/containers/uploadTracks/UploadTrack.js","components/navBar/NavBar.js","components/utils/friendList/FriendList.js","components/containers/shareTracks/children/SharePanel.js","services/ShareService.js","services/FriendGroupService.js","components/containers/shareTracks/children/myGroups/MyGroups.js","components/containers/shareTracks/ShareTrack.js","services/DownloadService.js","components/containers/downloadTracks/children/DownloadPanel.js","components/containers/downloadTracks/DownloadTrack.js","components/containers/welcome/Welcome.js","components/containers/login/Login.js","services/NotificationsService.js","components/containers/visualizeNotifications/children/NotificationsTable.js","components/containers/visualizeNotifications/VisualizeNotifications.js","components/containers/friends/children/myFriends/MyFriends.js","components/containers/friends/children/myFriendGroups/MyFriendGroups.js","services/FriendsService.js","components/containers/friends/Friends.js","components/routes/Routes.js","App.js","i18n.js","index.js"],"names":["AbstractService","this","webId","viadeRoute","errorReadPermission","warning","success","session","auth","trackSession","getSessionId","url","fc","FC","concat","createFile","delete","perm","readFile","then","content","err","extension","routes","files","length","i","parseInt","name","split","localeCompare","push","slice","VisualizeService","points","elevationsValues","urlRouteInPod","error","errorLoad","existsMultimedia","existsVideo","existsImage","HTMLElement","images","permissionsImage","permissionsVideo","videos","permission","mostrar","getPodRoute","readFolder","getRoutesNames","route","selectedRouteName","value","selectedFilter","getPointsToPrint","JSON","parse","latitude","longitude","elevation","numberOfPoints","x","y","getMultimedia","routeMedia","extensionRoute","permissionRoute","media","replace","Select","props","id","options","defaultValue","onChange","rest","className","map","option","key","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","actualIndexVideo","VisualizePanel","service","t","useTranslation","useState","zoom","setZoom","positions","setPositions","center","setCenter","origin","setOrigin","target","setTarget","data","setData","setElevation","showElements","setShowElements","showImage","setShowImage","currentImage","setCurrentImage","isViewerOpen","setIsViewerOpen","setImages","openImageViewer","useCallback","index","showVideo","setShowVideo","playingVideo","setPlayingVideo","setVideos","actualVideo","setActualVideo","loading","setLoading","disableVisualize","setDisableVisualize","handleFilter","document","getElementById","checked","a","vService","getMyRoutesFromPod","getSharedRoutesFromPod","NotificationManager","handleMultimedia","fillMap","data-testid","active","spinner","text","Container","Row","Col","sm","Map","TileLayer","Polyline","color","Marker","position","Popup","style","parent","maxWidth","domainPadding","theme","VictoryTheme","material","colorScale","src","onClick","width","alt","currentIndex","onClose","playing","height","Button","type","variant","disabled","VisualizeTrack","UploadService","errorPermissions","track","nameFile","reader","FileReader","onload","fileContent","result","catch","readAsText","times","processFile","tracks","forEach","processTrack","fileInput","processMultipleTrack","UploadPanel","uService","handleUpload","multiple","UploadTrack","MyNavBar","Navbar","href","process","Nav","data-tip","DropdownButton","title","DropdownItem","i18n","changeLanguage","LogoutButton","place","effect","FriendList","nameList","nameCk","offset","limit","Infinity","filter","container","items","children","item","String","useLDflexList","isSelectedFriends","ShareService","user","friends","successShare","userFriend","urlRouteInOtherPod","urlToCopy","urlFriendPod","itemExists","postFile","status","upload","removeCopiedTrack","userWebId","ldflex","FriendGroupService","groupName","groupJsonContent","folderContent","groupsNames","groupFriends","friendsWebIds","jsonld","group","stringify","friendGroup","generateJsonld","users","friend","obtainUrls","MyGroups","groups","timesLoad","SharePanel","myWebId","gService","groupData","setGroupData","showFriends","setShowFriends","useNotification","createNotification","discoverInbox","sendNotification","inboxUrl","Error","summary","actor","handleShare","sService","getName","shareTrack","getElementsByName","buttons","getFriendsWebIds","innerText","handleLoad","getRoutesFromPod","handleLoadGroups","getGroups","ShareTrack","useWebId","DownloadService","HTMLElementDown","HTMLElementUrlValue","file","blob","Blob","link","URL","createObjectURL","download","click","downloadTrack","DownloadPanel","dService","searchTrack","placeholder","DownloadTrack","Welcome","Value","Login","publicUrl","background","backgroundRepeat","backgroundPosition","backgroundSize","LoginButton","popup","rel","NotificationsService","path","includes","date","dates","firstDate","secondDate","timesNotifications","restartNotifications","NotificationsTable","rows","setRows","page","setPage","rowsPerPage","setRowsPerPage","showTable","setShowTable","classes","makeStyles","table","minWidth","useStyles","notification","fetchNotification","withoutNotifications","setWithoutNotifications","createData","N","Notification","Time","inboxes","inboxName","shape","checkContent","notifications","formatDates","published","info","Component","BoxWithLoading","Box","isLoading","align","useEffect","handleNotifications","Form","inline","FormControl","searchInput","toUpperCase","TableContainer","component","Paper","Table","size","aria-labelledby","aria-label","TableHead","TableRow","TableCell","TableBody","row","hover","tabIndex","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","VisualizeNotifications","MyFriends","fService","friendWebId","check","checkFriend","exists","add","errorAdd","window","location","reload","friendsWebId","errorDelete","MyFriendGroups","clear","create","FriendsService","errorRequest","knows","checkOrigin","request","client","op","obtainSessionFc","currentSession","login","Friends","overflowX","Routes","LoggedIn","exact","to","LoggedOut","App","backendPath","Backend","loadPath","use","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","react","wait","useSuspense","ReactDOM","render"],"mappings":"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","file":"static/js/main.03b9444c.chunk.js","sourcesContent":["import FC from \"solid-file-client\";\nimport auth from \"solid-auth-client\";\n\nexport default class AbstractService{\n\n    constructor(){\n        this.webId = null;\n         /*\n            15 == length(\"profile/card#me\")\n            \"viade/routes/\" == folder where the routes are stored\n        */\n        this.viadeRoute = 15;\n        this.errorReadPermission = null;\n        this.warning = null;\n        this.success = null;\n    }\n\n    /**\n     * Aux method that return the webId of the user who is logged in.\n     * @param {current session} session\n     */\n    getSessionId(session) {\n        if (session !== null) {\n            this.webId = session.webId;\n        }\n        //Si session es null, significa que no existe un contexto, es decir, se está\n        //cargando únicamente este componente => test unitarios\n    }\n\n    /**\n     * Aux method to return the session with it's logged in.\n     */\n    async getSession(){\n        await auth.trackSession((session) => {\n        if (!session){\n            return;\n        } else {\n            this.session = session;\n        }\n        });\n        this.getSessionId(this.session);\n    }\n\n    /**\n     * Aux method to check read permissions\n     * @returns {Promise<boolean>}\n     */\n    async writePermission(url) {\n        const fc = new FC(auth);\n        url = url.concat(\"/test.ttl\");\n        await fc.createFile(url, null);\n        await fc.delete(url);\n    }\n\n    /**\n     * Aux method to check permissions over\n     * an URL.\n     * @param url - url to check\n     * @returns {Promise<boolean>} if we have permissions\n     * or not\n     */\n    async readPermission(url) {\n        //let urlp = url.replace(\"/card#me\", \"\");\n        let perm = false;\n        const fc = new FC(auth);\n        await fc.readFile(url).then((content) => {\n        perm = true;\n        }, (err) => this.errorReadPermission = \"Error en el permission\".concat(err));\n        return perm;\n    }\n\n    /**\n     * Aux method that extracts track's name without extension\n     * @param {content of readFile} content \n     * @param {extension of file} extension\n     * @param {array of tracks} routes\n     */\n    async getRoutesNames(content, extension, routes) {\n        if (content.files.length === 0) {\n            this.warning = \"No hay contenido\";\n        } else {\n            for (let i = 0; i < content.files.length; i++) {\n                extension = content.files[parseInt(i)].name.split(\".\");\n                if (extension[extension.length - 1].localeCompare(\"json\") === 0) {\n                    // 5 == length(\".json\")\n                    routes.push(content.files[parseInt(i, 10)].name.slice(0, content.files[parseInt(i, 10)].name.length - 5));\n                }\n            }\n            this.success = \"Cargo rutas\";\n        }\n    }\n}","import auth from \"solid-auth-client\";\nimport FC from \"solid-file-client\";\nimport AbstractService from \"./AbstractService\";\n\n/*\n    *****************************************\n    *                                       *\n    *   FOLLOWING THE SPECIFICATION V1.1    *\n    *                                       *\n    * ***************************************\n*/\n\nexport default class VisualizeService extends AbstractService{\n\n    constructor(){\n        super();\n        this.points = [];\n        this.elevationsValues = [];\n        this.urlRouteInPod = null;\n        this.routes = [];\n        this.extension = null;\n        this.session = null;\n        this.warning = null;\n        this.success = null;\n        this.error = null;\n        this.errorLoad = false;\n        this.existsMultimedia = true;\n        this.existsVideo = false;\n        this.existsImage = false;\n        this.HTMLElement = null;\n        this.images = [];\n        this.permissionsImage = false;\n        this.permissionsVideo = false;\n        this.videos = [];\n        this.permission = null;\n        this.mostrar=true;\n    }\n\n    /**\n     * Method that returns my tracks stored in pod\n     */\n    async getMyRoutesFromPod() {\n        await this.getPodRoute(\"viade/routes/\");\n        const fc = new FC(auth);\n        try {\n            this.content = await fc.readFolder(this.urlRouteInPod, null);\n            await this.getRoutesNames(this.content, this.extension, this.routes);\n        } catch (SFCFetchError) {\n            this.errorLoad = true;\n        }\n    }\n\n    /**\n     * Method that returns shared tracks stored in pod\n     */\n    async getSharedRoutesFromPod() {\n        await this.getPodRoute(\"viade/shared/\");\n        const fc = new FC(auth);\n        try {\n            this.content = await fc.readFolder(this.urlRouteInPod, null);\n            await this.getRoutesNames(this.content, this.extension, this.routes);\n        } catch (SFCFetchError) {\n            this.errorLoad = true;\n        }\n    }\n\n    /**\n     * Aux method that returns the route to tracks upload in the pod.\n     * @param {route in pod} route\n     */\n    async getPodRoute(route) {\n        /*\n            15 == length(\"profile/card#me\")\n            \"viade/routes/\" == folder where the routes are stored\n        */\n        await super.getSession();\n        this.urlRouteInPod = this.webId.slice(0, this.webId.length - this.viadeRoute).concat(route);\n        if (this.HTMLElement !== null){\n            let selectedRouteName = this.HTMLElement.value.concat(\".json\");\n            this.urlRouteInPod = this.urlRouteInPod.concat(selectedRouteName);\n        }\n    }\n\n    /**\n     * Method that assign the points to print the track in the map\n     */\n    async fillMap(selectedFilter, HTMLElement){\n        this.HTMLElement = HTMLElement;\n        if (selectedFilter.localeCompare(\"Mis rutas\") === 0) {\n            await this.getPodRoute(\"viade/routes/\");\n        } else if (selectedFilter.localeCompare(\"Compartidas\") === 0) {\n            await this.getPodRoute(\"viade/shared/\");\n        }\n        const fc = new FC(auth);\n        try{\n            this.content = await fc.readFile(this.urlRouteInPod, null);\n            await this.getPointsToPrint(this.content); \n        } catch (SFCFetchError){\n            this.error = \"Error al pillar datos\";\n        }\n    }\n\n    /**\n     * Aux method to extract points and elevations from track\n     * @param {track's content} content \n     */\n    async getPointsToPrint(content) {\n        let route = JSON.parse(content);\n        let latitude = null;\n        let longitude = null;\n        let elevation = null;\n        // We obtain the points of the route\n        let numberOfPoints = route.points.length;\n        for (let i = 0; i < numberOfPoints; i++) {\n\n            latitude = route.points[parseInt(i, 10)].latitude;\n            longitude = route.points[parseInt(i, 10)].longitude;\n            this.points.push([latitude, longitude]);\n\n            elevation = route.points[parseInt(i, 10)].elevation;\n            this.elevationsValues.push({ x: \"P\".concat(i+1), y: parseInt(elevation, 10)});\n        }\n        await this.getMultimedia(route);\n    }\n\n    /**\n     * Aux method to obtain images from track\n     * @param route - track\n     * @returns {Promise<void>}\n     */\n    async getMultimedia(route) {\n        // We obtain the images of the track\n        let routeMedia = null;\n        let extensionRoute = null;\n        let extension = null;\n        let permissionRoute = null;\n        if (typeof(route.media) !== \"undefined\" && route.media.length > 0) {\n                for (let media in route.media) {\n                    if (media !== null){\n                        routeMedia = route.media[media][\"@id\"];\n                        extensionRoute = routeMedia.split(\".\");\n                        extension = \".\".concat(extensionRoute[extensionRoute.length - 1]);\n                        if ((extension.localeCompare(\".jpg\") === 0) || (extension.localeCompare(\".png\") === 0)\n                            || (extension.localeCompare(\".jpeg\") === 0)) {\n                            try {\n                                this.existsImage = true;\n                                routeMedia.replace(\"/viade/resources/\", \"/card#me\");\n                                permissionRoute = routeMedia;\n                                if (await super.readPermission(permissionRoute)){\n                                    this.permissionsImage = true;\n                                    this.images.push(routeMedia);\n                                } else {\n                                    this.permissionsImage = false;\n                                }\n                            } catch (e) {\n                                this.permissionsImage = false;\n                            }\n                        } else if (extension.localeCompare(\".mp4\") === 0) {\n                            try {\n                                this.existsVideo = true;\n                                routeMedia.replace(\"/viade/resources/\", \"/card#me\");\n                                permissionRoute = routeMedia;\n                                if(await super.readPermission(permissionRoute)){\n                                    this.permissionsVideo = true;\n                                    this.videos.push(routeMedia);\n                                } else {\n                                    this.permissionsVideo = false;\n                                }\n                            } catch (e) {\n                                this.permissionsVideo = false;\n                            }\n                        }\n                    }\n                }\n        } else {\n            this.existsMultimedia = false;\n        }\n    }\n}","import React from \"react\";\n\n/**\n * Select component used in different areas of the interface\n * (VisualizeTrack, ShareTrack)\n */\nexport const Select = (props) => {\n  const { id, options, defaultValue, onChange, ...rest } = props;\n  return (\n    <div className=\"\">\n      <select id={id} value={defaultValue} onChange={onChange} {...rest}>\n        {options &&\n          options.map((option) => (\n            <option value={option} key={option}>\n              {option}\n            </option>\n          ))}\n      </select>\n    </div>\n  );\n};\n","import React, {useState, useCallback} from \"react\";\nimport {Marker, Popup, TileLayer, Polyline, Map} from \"react-leaflet\";\nimport { VictoryArea, VictoryChart, VictoryTheme, VictoryStack } from \"victory\";\nimport {Button, Col, Row, Container} from \"react-bootstrap\";\nimport {useTranslation} from \"react-i18next\";\nimport L from \"leaflet\";\nimport {Select} from \"../../../utils/select/Select\";\nimport {NotificationContainer, NotificationManager} from \"react-notifications\";\nimport ImageViewer from \"react-simple-image-viewer\";\nimport ReactPlayer from \"react-player\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport VisualizeService from \"../../../../services/VisualizeService\";\n\n// CSS imports\nimport \"leaflet/dist/leaflet.css\";\nimport \"./VisualizePanel.css\";\nimport \"react-notifications/lib/notifications.css\";\n\n// Marker's icon\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\n\nlet actualIndexVideo = 0;   // For actual index video\nlet selectedFilter; // For actual filter\n\n/**\n * Component used to display routes on a map\n */\nexport const VisualizePanel = ({service}) => {\n  // Locales for i18n\n  const {t} = useTranslation();\n\n  // Hooks for polyline, map, histogram\n  // Setting default values\n  const zoomValue = 11;\n  const [zoom, setZoom] = useState(zoomValue);\n  const [positions, setPositions] = useState();\n  const [center, setCenter] = useState([43.354444, -5.851667]);\n  const [origin, setOrigin] = useState(0);\n  const [target, setTarget] = useState(0);\n  const [data, setData] = useState([]);\n  const [elevation, setElevation] = useState([]);\n  const [showElements, setShowElements] = useState(false);\n\n  // Hooks for images\n  const [showImage, setShowImage] = useState(false);\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n  const [images, setImages] = useState([]);\n  const openImageViewer = useCallback((index) => {\n\t\tsetCurrentImage(index);\n\t\tsetIsViewerOpen(true);\n  }, []);\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n\n  // Hooks for video\n  const [showVideo, setShowVideo] = useState(false);\n  const [playingVideo, setPlayingVideo] = useState(false);\n  const [videos, setVideos] = useState([]);\n  const [actualVideo, setActualVideo] = useState(\"\");\n\n  // For tracks filter\n  const myTracks = \"Mis rutas\";\n  const shared = \"Compartidas\";\n\n  // Loading\n  const [loading, setLoading] = useState(false);\n  \n  // Handle visualize button\n  const [disableVisualize, setDisableVisualize] = useState(true);\n\n  /**\n   * Function that handle select radioButton\n   */\n  function handleFilter() {\n    if (typeof(selectedFilter) !== \"undefined\" ){\n      if (selectedFilter.localeCompare(shared) === 0) {\n        document.getElementById(\"radio-2\").checked = true;\n      } else if (selectedFilter.localeCompare(myTracks) === 0) {\n        document.getElementById(\"radio-1\").checked = true;\n      }\n    }\n  }\n\n  /**\n   * Fuction to handle load select event\n   * @returns {Promise<void>}\n   */\n  async function handleLoad(){\n    let vService = service;\n    if (vService instanceof VisualizeService) {\n      vService = new VisualizeService();\n    }\n    if (document.getElementById(\"radio-1\").checked === true){\n      selectedFilter = myTracks;\n      await vService.getMyRoutesFromPod();\n    } else if (document.getElementById(\"radio-2\").checked === true){\n      selectedFilter = shared;\n      await vService.getSharedRoutesFromPod();\n    }\n    if (vService.warning !== null){\n      NotificationManager.warning(t(\"routes.loadWarningMessage\"), t(\"routes.loadWarningTitle\"), 3000);\n    } else if (vService.errorLoad || typeof(selectedFilter) === \"undefined\")  {\n      NotificationManager.error(t(\"routes.errorMessage\"), t(\"routes.errorTitle\"), 3000);\n    } else {\n      setDisableVisualize(false);\n      NotificationManager.success(t(\"routes.successLoadMessage\"), t(\"routes.successLoadTitle\"), 2000);\n      setData(vService.routes);\n    }\n    handleFilter();\n  }\n\n  /**\n   * Fuction to handle multimedia hooks and advices\n   * @param vService\n   */\n  function handleMultimedia(vService) {\n    setShowVideo(false);\n    setShowImage(false);\n    if (vService.videos.length > 0 || vService.images.length > 0) {\n      if (vService.images.length > 0) {\n        setShowImage(true);\n        setImages(vService.images);\n      }\n      if (vService.videos.length > 0) {\n        setShowVideo(true);\n        setVideos(vService.videos);\n        setActualVideo(vService.videos[parseInt(actualIndexVideo)]);\n      }\n    } else {\n      setShowImage(false);\n      setShowVideo(false);\n      if (!vService.permissionsImage && vService.existsImage === true) {\n        NotificationManager.error(t(\"routes.imageErrorMessage\"), t(\"routes.imageErrorTitle\"), 3000);\n      }\n      if (!vService.permissionsVideo && vService.existsVideo === true) {\n        NotificationManager.error(t(\"routes.videoErrorMessage\"), t(\"routes.videoErrorTitle\"), 3000);\n      }\n    }\n  }\n\n  /**\n   * Function to handle display map, histogram and multimedia event\n   * @returns {Promise<void>}\n   */\n  async function handleSelect(){\n    setLoading(true);\n    let vService = service;\n    if (vService instanceof VisualizeService) {\n      vService = new VisualizeService();\n    }\n    await vService.fillMap(selectedFilter, document.getElementById(\"selectRoute\"));\n    if (vService.error != null){\n      NotificationManager.error(t(\"routes.errorMessage\"), t(\"routes.errorTitle\"), 3000);\n    } else {\n      let points = vService.points;\n      let elevationsValues = vService.elevationsValues;\n      // We show the points of the route in the map\n      setOrigin(points[0]);\n      setTarget(points[points.length - 1]);\n      setCenter(points[0]);\n      setPositions(points);\n      setZoom(zoomValue);\n      setElevation(elevationsValues);\n\n      if (vService.mostrar === true) {\n        setShowElements(true);\n      }\n      if (vService.existsMultimedia === true) {\n        handleMultimedia(vService);\n      }\n    }\n    setLoading(false);\n    handleFilter();\n  }\n\n  /**\n   * Fuction to set power off the video player\n   */\n  function handlePowerOff() {\n    setPlayingVideo(false);\n  }\n\n  /**\n   * Fuction to set power on the video player\n   */\n  function handlePowerOn() {\n    setPlayingVideo(true);\n  }\n\n  /**\n   * Fuction to set next video\n   * CHECK THIS FUNCTION\n   */\n  function handleNext() {\n    if ((actualIndexVideo + 1 <= (videos.length - 1)) && (videos.length > 1)) {\n      actualIndexVideo++;\n      setActualVideo(videos[parseInt(actualIndexVideo, 10)]);\n    }\n  }\n\n  /**\n   * Fuction to set previous video\n   */\n  function handlePrevious() {\n    if (actualIndexVideo > 0) {\n      actualIndexVideo--;\n      setActualVideo(videos[parseInt(actualIndexVideo)]);\n    }\n  }\n\n  return (\n    <section data-testid=\"visualizeTest\">\n      <LoadingOverlay active={loading} spinner text={t(\"routes.loading\")}>\n        <Container data-testid=\"containerVisualTest\">\n          <Row>\n            <h1 className=\"myH1\">{t(\"routes.title\")}</h1>\n          </Row>\n          <Row>\n            <Col sm={10}>\n              <Row data-testid=\"visualizeTest2\">\n                {!isViewerOpen && (\n                  <Map className=\"map\" center={center} zoom={zoom}>\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n                    {showElements && (\n                      <div>\n                        <Polyline color={\"blue\"}\n                                  positions={positions}/>\n                        <Marker position={origin}>\n                          <Popup>{t(\"routes.origin\")}</Popup>\n                        </Marker>\n                        <Marker position={target}>\n                          <Popup>{t(\"routes.target\")}</Popup>\n                        </Marker>\n                      </div>\n                    )}\n                  </Map>\n                )}\n              </Row>\n              <Row>\n                {showElements && (\n                  <Col>\n                    <Row>\n                      <h4 id=\"h4PerfilElevacion\" className=\"h4-format\">{t(\"routes.histogram\")}</h4>\n                    </Row>\n                    <Row>\n                      <VictoryChart style={{ parent: { maxWidth: \"80%\" }}} domainPadding={10} theme={VictoryTheme.material}>\n                        <VictoryStack colorScale={\"cool\"}>\n                          <VictoryArea data={elevation}/>\n                        </VictoryStack>\n                      </VictoryChart>\n                    </Row>\n                  </Col>\n                )}\n                <Col>\n                  {(showImage || showVideo) && (\n                    <Row>\n                      <h4 className=\"h4-format\">{t(\"routes.multimedia\")}</h4>\n                    </Row>\n                  )}\n                  {showImage && (\n                    <div>\n                      <Row>\n                        <div className=\"img_viewer formal-div\">\n                          {images.map((src, index) => (\n                            <img data-testid=\"btnImagenTest\" className=\"my_Img\" src={src} onClick={() => openImageViewer(index)} width=\"90\" id={\"\" + index} key={index} alt=\"\"/>\n                          ))}\n                          {isViewerOpen && (\n                            <ImageViewer src={images} currentIndex={currentImage} onClose={closeImageViewer}/>\n                          )}\n                        </div>\n                      </Row>\n                    </div>\n                  )}\n                  {showVideo && (\n                    <Row>\n                      <div className=\"formal-div\">\n                        <ReactPlayer playing={playingVideo} className=\"player-format\" url={actualVideo} width='auto' height='230px'/>\n                        <Button data-testid=\"btnPowerOnTest\" className=\"button-margin\" onClick={handlePowerOn}>{t(\"routes.play\")}</Button>\n                        <Button data-testid=\"btnPowerOffTest\" className=\"button-margin\" onClick={handlePowerOff}>{t(\"routes.stop\")}</Button>\n                        <Button data-testid=\"btnNextTest\" className=\"button-margin\" onClick={handleNext}>{t(\"routes.next\")}</Button>\n                        <Button data-testid=\"btnPreviousTest\" className=\"button-margin\" onClick={handlePrevious}>{t(\"routes.previous\")}</Button>\n                      </div>\n                    </Row>\n                  )}\n                </Col>\n              </Row>\n            </Col>\n            <Col>\n              <div>\n                <Row>\n                  <label data-testid=\"label1Test\" className=\"radio-format\" name=\"filter-label\">\n                    <input data-testid=\"inputLabel1\" name=\"filter-radio\" id=\"radio-1\" type=\"radio\" checked={true} onChange={handleFilter}/>\n                    {t(\"routes.myTracks\")}\n                  </label>\n                  <label className=\"radio-format\" name=\"filter-label\">\n                    <input data-testid=\"inputLabel2\" name=\"filter-radio\" id=\"radio-2\" type=\"radio\"/>\n                    {t(\"routes.shared\")}\n                  </label>\n                </Row>\n                <Button id=\"loadButton\" data-testid=\"btn1VTest\" className=\"visualizeButton\" variant=\"primary\"\n                        onClick={handleLoad}>\n                  {t(\"routes.loadButton\")}\n                </Button>\n                <h3>{t(\"routes.select\")}</h3>\n                <Select data-testid=\"combo\" className=\"select-format\" id={\"selectRoute\"} options={data}/>\n                <div>\n                  <Button id=\"visualizeRouteButton\" data-testid=\"btn2VTest\" className=\"visualizeButton\" onClick={handleSelect} disabled={disableVisualize}>\n                    {t(\"routes.button\")}\n                  </Button>\n                </div>\n              </div>\n            </Col>\n          </Row>\n          <NotificationContainer/>\n        </Container>\n      </LoadingOverlay>\n    </section>\n  );\n};\n\nexport default VisualizePanel;","import React from \"react\";\nimport VisualizeService from \"../../../services/VisualizeService\";\nimport VisualizePanel from \"./children/VisualizePanel\";\n\nexport const VisualizeTrack = () => {\n\n    return (\n      <VisualizePanel service={new VisualizeService()}/>\n    );\n};\n\nexport default VisualizeTrack;","import FC from \"solid-file-client\";\nimport AbstractService from \"./AbstractService\";\n\n/*\n    *****************************************\n    *                                       *\n    *   FOLLOWING THE SPECIFICATION V1.1    *\n    *                                       *\n    * ***************************************\n*/\n\nexport default class UploadService extends AbstractService{\n\n  constructor() {\n    super();\n    this.HTMLElement = null;\n    this.error = false;\n    this.success = false;\n    this.errorPermissions = false;\n    this.urlRouteInPod = null;\n  }\n\n  /**\n   * Aux method that returns the route to tracks upload in the pod.\n   */\n  async getPodRoute() {\n    /*\n        15 == length(\"profile/card#me\")\n        \"viade/routes/\" == folder where the routes are stored\n    */\n    await super.getSession();\n    this.urlRouteInPod = this.webId.slice(0, this.webId.length - this.viadeRoute).concat(\"viade/routes\");\n  }\n\n  /**\n   * Aux method to process the track file.\n   * Obtain the content and upload the file to the Solid\n   * POD\n   * @param nameFile - File's name\n   * @param track - The track to upload\n   * @returns {Promise<*>}\n   */\n  async processFile(track, nameFile) {\n    let reader = new FileReader();\n    let viadeRoute = this.viadeRoute;\n    reader.onload = function() {\n      let fileContent = reader.result;\n      const auth = require(\"solid-auth-client\");\n      auth.trackSession((session) => {\n        if (!session) {\n          return;\n        } else {\n          /*\n            15 == length(\"profile/card#me\")\n            \"viade/routes/\" == folder where the routes are stored\n          */\n          let webId = session.webId;\n          let urlRouteInPod = webId.slice(0, webId.length - viadeRoute).concat(\"viade/routes/\").concat(nameFile);\n          const fc = new FC(auth);\n          fc.createFile(urlRouteInPod, fileContent, \"text/turtle\", {}).then(() => {}\n          ).catch((err) => this.error = true);\n        }\n      });\n    };\n    reader.readAsText(track);\n  }\n\n  /**\n   * Process the case of an individual track to upload\n   * @param track - Track to upload\n   * @returns {Promise<void>}\n   */\n  async processTrack(track) {\n    let times = 0;  // To avoid too much success message\n    let nameFile = track.name;\n    let extension = nameFile.split(\".\");\n    if (!extension[1].localeCompare(\"json\")) {\n      if (times === 0) {\n        this.success = true;\n        times++;\n      }\n      await this.processFile(track, nameFile);\n    } else {\n      this.error = true;\n    }\n  }\n\n  /**\n   * Process the case of multiple tracks\n   * to upload.\n   * @param tracks - Track array\n   * @returns {Promise<void>}\n   */\n\n  async processMultipleTrack(tracks) {\n    tracks.forEach(async (track) => {\n      await this.processTrack(track);\n    });\n  }\n\n  /**\n   * Perform multiple upload of tracks\n   * @param {*} HTMLElement {input file}\n   * @returns {Promise<void>}\n   */\n  async handleUpload(HTMLElement) {\n    this.HTMLElement = HTMLElement;\n    const fileInput = this.HTMLElement;\n    const tracks = fileInput.files;\n    await this.getPodRoute();\n    try {\n      await super.writePermission(this.urlRouteInPod);\n      await this.processMultipleTrack(tracks);\n    } catch (SFCFetchError) {\n      this.errorPermissions = true;\n    }\n  }\n}","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"react-notifications/lib/notifications.css\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport { Button } from \"react-bootstrap\";\nimport \"./UploadPanel.css\";\nimport UploadService from \"../../../../services/UploadService\";\n\n\nexport const UploadPanel = ({service}) => {\n  // Locales for i18n\n  const { t } = useTranslation();\n\n  /**\n   * Upload the track chosen by the user through the input file\n   */\n  async function handleUpload(){\n    let uService = service;\n    if (uService instanceof UploadService) {\n      uService = new UploadService();\n    }\n    await uService.handleUpload(document.getElementById(\"fileArea\"));\n    if (uService.success) {\n      NotificationManager.success(t(\"upload.successMessage\"), t(\"upload.successTitle\"), 2000);\n      document.getElementById(\"fileArea\").value = \"\"; // Clear input file\n    } else if (uService.error) {\n      NotificationManager.error(t(\"upload.errorMessage\"), t(\"upload.errorTitle\"), 3000);\n    } else if (document.getElementById(\"fileArea\").value === \"\") {\n      NotificationManager.error(t(\"upload.errorEmptyMessage\"), t(\"upload.errorTitle\"), 3000);\n    } else if (uService.errorPermissions) {\n      NotificationManager.error(t(\"upload.errorPermissionsMessage\"), t(\"upload.errorTitle\"), 3000);\n    }\n  }\n\n  return (\n    <section data-testid=\"uploadTrackTest\">\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h2>{t(\"upload.title\")}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <span>{t(\"upload.uploadPrompt\")}</span>\n            <input data-testid=\"input-file-area\" type=\"file\" id=\"fileArea\" multiple/>\n          </div>\n          <div className=\"modal-footer\">\n            <Button data-testid=\"btnUpload\" onClick={handleUpload}>\n              {t(\"upload.button\")}\n            </Button>\n          </div>\n        </div>\n        <NotificationContainer/>\n      </div>\n    </section>\n  );\n};\n\nexport default UploadPanel;","import React from \"react\";\nimport UploadPanel from \"./children/UploadPanel\";\nimport UploadService from \"../../../services/UploadService\";\n\nexport const UploadTrack = () => {\n\n  return (\n    <UploadPanel service={new UploadService()}/>\n  );\n};\n\nexport default UploadTrack;","import React from \"react\";\nimport { Navbar, Nav, DropdownButton, DropdownItem } from \"react-bootstrap\";\nimport \"./Navbar.css\";\nimport {useTranslation} from \"react-i18next\";\nimport {LogoutButton} from \"@solid/react\";\nimport ReactTooltip from \"react-tooltip\";\nimport i18n from \"i18next\";\n\n\nconst MyNavBar = () => {\n\n    const {t} = useTranslation();\n    return (\n        <section data-testid=\"navTest\">\n                <Navbar className=\"nav-color\">\n                    <a className=\"navbar-brand a-bar a-logo\" href=\"#/\">\n                        <img src={process.env.PUBLIC_URL + \"/img/logoViaDe.svg\"} width=\"100\" height=\"45\" alt=\"ViaDe icon\"/>\n                    </a>\n                    <Nav className=\"mr-auto\">\n                        <a id=\"navBarVisualize\" data-tip={t(\"navBar.maps\")} className=\"navbar-link a-bar\" href=\"#/visualize\">\n                            <img src={process.env.PUBLIC_URL + \"/img/icon/maps-icon.png\"} width=\"40\" height=\"40\" alt=\"My tracks\"/>\n                        </a>\n                        <a id=\"navBarShare\" data-tip={t(\"navBar.share-files\")} className=\"navbar-link a-bar\" href=\"#/share\">\n                            <img src={process.env.PUBLIC_URL + \"/img/icon/share-files.svg\"} width=\"27\" height=\"49\" alt=\"Share files\"/>\n                        </a>\n                        <a id=\"navBarFriends\" data-tip={t(\"navBar.friends\")} className=\"navbar-link a-bar\" href=\"#/friends\">\n                            <img src={process.env.PUBLIC_URL + \"/img/icon/friends-icon.png\"} width=\"38\" height=\"40\" alt=\"My friends\"/>\n                        </a>\n                        <a id=\"navBarNotifications\" data-tip={t(\"navBar.notifications\")} className=\"navbar-link a-bar\" href=\"#/notifications\">\n                            <img src={process.env.PUBLIC_URL + \"/img/icon/notification-icon.svg\"} width=\"26\" height=\"44\" alt=\"Notifications\"/>\n                        </a>\n                        <a id=\"navBarUpload\" data-tip={t(\"navBar.upload\")} className=\"navbar-link a-bar\" href=\"#/upload\">\n                            <img src={process.env.PUBLIC_URL + \"/img/icon/upload-icon.png\"} width=\"40\" height=\"40\" alt=\"Upload track\"/>\n                        </a>\n                        <a id=\"navBarDownload\" data-tip={t(\"navBar.download\")} className=\"navbar-link a-bar a-download\" href=\"#/download\">\n                            <img src={process.env.PUBLIC_URL + \"/img/icon/download-icon.svg\"} width=\"31\" height=\"25\" alt=\"Download track\"/>\n                        </a>\n                        <div className=\"i18nMenu\">\n                            <DropdownButton id = \"btnLanguage\" className=\"i18nMenu\" variant=\"light\" title={t(\"nav.language\")}>\n                                <DropdownItem>\n                                    <div id=\"btnEng\" onClick={() => i18n.changeLanguage(\"en\")}> ENG </div>\n                                </DropdownItem>\n                                <DropdownItem>\n                                    <div id=\"btnEsp\" onClick={() => i18n.changeLanguage(\"es\")}> ESP </div>\n                                </DropdownItem>\n                            </DropdownButton>\n                        </div>\n                        <LogoutButton id=\"logoutButton\" className=\"logout btn btn-light\">{t(\"logout.button\")}</LogoutButton>\n                        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"solid\"/>\n                      </Nav>\n                </Navbar>\n        </section>\n    );\n};\n\nexport default MyNavBar;\n","import React from \"react\";\nimport {useLDflexList} from \"@solid/react\";\nimport \"./FriendList.css\";\n\n/** Displays a list of friends with a checkBox */\nexport default function FriendList({\n                                     src, nameList, nameCk, offset = 0, limit = Infinity, filter = () => true,\n                                     container = (items) => <ul data-testid=\"friendsList\" className=\"ul-format\">{items}</ul>,\n                                     children = (item, index) => <li name={String(nameList)} key={index}>{`${item}`}\n                                         <input id = \"friendElementInput\" data-testid={\"_\".concat(String(index))} name={String(nameCk)} className=\"ck\" type=\"checkbox\"/></li>,\n                                   }){\n  const items = useLDflexList(src)\n    .filter(filter)\n    .slice(offset, +offset + +limit)\n    .map(children);\n  return container ? container(items) : items;\n}","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Select } from \"../../../utils/select/Select\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport \"./SharePanel.css\";\nimport FriendList from \"../../../utils/friendList/FriendList\";\nimport { useNotification } from \"@inrupt/solid-react-components\";\nimport ShareService from \"../../../../services/ShareService\";\nimport FriendGroupService from \"../../../../services/FriendGroupService\";\nimport { MyGroups } from \"./myGroups/MyGroups\";\n\nlet timesLoad = 0; // For handleLoad()\nlet isSelectedFriends; // For selected filter (boolean)\nlet selectedFilter; // For selected filter (value)\n\n\n\nexport const SharePanel = ({myWebId, service, gService}) => {\n\n  // i18n locales\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n  const [groupData, setGroupData] = useState([]);\n  const [showElements, setShowElements] = useState(false);\n  const [showFriends, setShowFriends] = useState(true);\n\n  const webId = myWebId;\n  const { createNotification, discoverInbox } = useNotification(webId);\n\n  /**\n   * Send a notification to the receiver of the track\n   * @param userWebId - WebId of the receiver\n   * @returns {Promise<void>}\n   */\n  const sendNotification = async (userWebId) => {\n\n    try {\n      const inboxUrl = await discoverInbox(userWebId);\n      if (!inboxUrl) {\n        throw new Error(\"Inbox not found\");\n      }\n      let HTMLElement = document.getElementById(\"selectRoute\");\n      createNotification(\n        {\n          title: \"Share notification\",\n          summary: \"Your friend: \".concat(webId)\n            .concat(\", shared this track with you: \")\n            .concat(HTMLElement.value),\n          actor: webId\n        },\n        inboxUrl\n      );\n    } catch (ex) {\n      NotificationManager.error(t(\"notifications.notificationErrorMessage\"), t(\"notifications.notificationErrorTitle\"), 3000);\n    }\n  };\n\n  /**\n   * Upload the share track and send a notification to the receiver\n   * @param friendsWebIds\n   * @returns {Promise<void>}\n   */\n  async function handleShare(friendsWebIds) {\n    let HTMLElement = document.getElementById(\"selectRoute\");\n    if (friendsWebIds.length > 0 && HTMLElement.value.localeCompare(\"\") !== 0){\n      let userWebId = null;\n      let name = null;\n      let sService = service;\n      for (let i=0 ; i < friendsWebIds.length; i++){\n        userWebId = friendsWebIds[parseInt(i, 10)];\n        if (sService instanceof ShareService) {\n          sService = new ShareService();\n        }\n        name = await sService.getName(userWebId);\n        await sService.shareTrack(friendsWebIds[parseInt(i)], HTMLElement);\n\t\t\n        if (sService.successShare === true){\n          NotificationManager.success(t(\"share.successShareMessage\").concat(name), t(\"share.successShareTitle\"), 2000);\n          await sendNotification(userWebId);\n        } else if (sService.warning === true){\n          NotificationManager.warning(t(\"share.warningShareMessage\").concat(name), t(\"share.warningShareTitle\"), 5000);\n        } else {\n          if (sService.error === \"Error en el create\"){\n            NotificationManager.error(t(\"share.errorCreateMessage\").concat(name), t(\"share.errorCreateTitle\"), 5000);\n          } else if(sService.error === \"Permisos denegados\"){\n            NotificationManager.error(t(\"share.errorPermissionMessage\").concat(name), t(\"share.errorPermissionTitle\"), 5000);\n          } else if(sService.error === \"Carpeta no encontrada\"){\n            NotificationManager.error(t(\"share.errorFriendsFolder\").concat(name), t(\"share.errorCreateTitle\"), 5000);\n          } else if (sService.error === \"Mis permisos fallan\") {\n            NotificationManager.error(t(\"share.errorMyPermissionsMessage\").concat(name), t(\"share.errorCreateTitle\"), 5000);\n          } else {\n            NotificationManager.warning(t(\"share.warningDeleteMessage\").concat(name), t(\"share.warningDeleteTitle\"), 5000);\n          }\n        }\n      }\n    } else if (friendsWebIds.length === 0) {\n      NotificationManager.error(t(\"share.errorFriends\"), t(\"share.errorFriendsTitle\") , 5000);\n    } else {\n      NotificationManager.error(t(\"share.errorEmptyTracks\"), t(\"share.errorFriendsTitle\") , 5000);\n    }\n  }\n\n  /**\n   * Handle friends/groups to share\n   * @returns {Promise<void>}\n   */\n  async function handleFriends(){\n    let friends = document.getElementsByName(\"listFriend\");\n    let buttons = document.getElementsByName(\"myFriend\");\n    let group = false;\n    let friendsWebIds = [];\n    if (selectedFilter.localeCompare(\"radio-2\") === 0) {\n      if (gService instanceof FriendGroupService){\n        gService = new FriendGroupService();\n      }\n      group = true;\n      friends = document.getElementsByName(\"groupList\");\n      buttons = document.getElementsByName(\"group\");\n    }\n    for (let i = 0; i < buttons.length; i++){\n      if (group) {\n        if (buttons[parseInt(i, 10)].checked) {\n          await gService.getFriendsWebIds(friends[parseInt(i, 10)].innerText);\n        }\n      } else {\n        if (buttons[parseInt(i, 10)].checked){\n          friendsWebIds.push(friends[parseInt(i, 10)].innerText);\n        }\n      }\n    }\n    if (group && gService.groupFriends.length > 0) {\n      friendsWebIds = gService.groupFriends;\n    }\n    await handleShare(friendsWebIds);\n  }\n\n  /**\n   * Load tracks to select component\n   * @returns {Promise<void>}\n   */\n  async function handleLoad(){\n    let sService = service;\n    await sService.getRoutesFromPod();\n    if (sService.errorLoad === null) {\n      setData(sService.routes);\n    } else if (timesLoad === 0) {\n      NotificationManager.warning(t(\"share.warningLoadMessage\"), t(\"share.warningLoadTitle\"), 3000);\n      timesLoad++;\n    }\n  }\n\n  /**\n   * Load groups from POD\n   * @returns {Promise<void>}\n   */\n  async function handleLoadGroups(){\n    if (gService instanceof FriendGroupService){\n      gService = new FriendGroupService();\n    }\n    await gService.getGroups();\n    if (gService.errorLoad === null){\n      setGroupData(gService.groupsNames);\n    }\n  }\n\n  /**\n   * Handle filter change\n   */\n  function handleFilter() {\n    if (typeof(selectedFilter) !== \"undefined\") {\n      if (selectedFilter.localeCompare(\"radio-1\") === 0){\n        document.getElementById(\"radio-1\").checked = true;\n      } else if (selectedFilter.localeCompare(\"radio-2\") === 0) {\n        document.getElementById(\"radio-2\").checked = true;\n      }\n    }\n  }\n\n  /**\n   * Shows friend or groups and loads tracks\n   * @returns {Promise<void>}\n   */\n  async function handleVisualize(){\n    if (document.getElementById(\"radio-1\").checked === true) {\n      selectedFilter = \"radio-1\";\n      isSelectedFriends = true;\n    } else {\n      selectedFilter = \"radio-2\";\n      isSelectedFriends = false;\n    }\n    if (data.length === 0) {\n      await handleLoad();\n    }\n    if (isSelectedFriends){\n      setShowFriends(true);\n    } else {\n      await handleLoadGroups();\n      setShowFriends(false);\n    }\n    setShowElements(true);\n    handleFilter();\n  }\n\n  return (\n    <section data-testid=\"shareTrackTest\">\n      <div className=\"modal-div-cont\">\n        <div className=\"modal-cont\">\n          <div className=\"modal-header\">\n            <h2>{t(\"share.title\")}</h2>\n            <hr/>\n          </div>\n          <div className=\"main-content\">\n            <span>{t(\"share.createSharePrompt\")}</span>\n            <Row className=\"myRow\">\n              <label className=\"radio-format\" name=\"filter-label\">\n                <input data-testid=\"radio-1\" name=\"filter-radio\" id=\"radio-1\" type=\"radio\" checked={true} onChange={handleFilter}/>\n                {t(\"share.friend\")}\n              </label>\n              <label className=\"radio-format\" name=\"filter-label\">\n                <input data-testid=\"radio-2\" name=\"filter-radio\" id=\"radio-2\" type=\"radio\" onChange={handleFilter}/>\n                {t(\"share.group\")}\n              </label>\n            </Row>\n            <Button id=\"btnLoad\" data-testid=\"btnLoad\" className=\"correct-margin-top\" onClick={handleVisualize}>{t(\"share.loadInfo\")}</Button>\n          </div>\n          {showElements && (\n              <form className=\"modal-body\">\n                <div>\n                  <label className=\"lab\">\n                    {t(\"share.idLabel\")}\n                  </label>\n                  <Select className=\"select-share\" id={\"selectRoute\"} options={data}/>\n                </div>\n                <Row className=\"myRow\">\n                  {showFriends && (\n                      <Col>\n                        <div className=\"list-friends\">\n                          <h4 className=\"h4-format\">{t(\"share.friends\")}</h4>\n                          <FriendList src=\"user.friends\" nameList=\"listFriend\" nameCk=\"myFriend\"></FriendList>\n                        </div>\n                      </Col>\n                    )}\n                  {!showFriends && (\n                      <Col>\n                        <div className=\"list-groups\">\n                          <h4 className=\"h4-format\">{t(\"share.groups\")}</h4>\n                          <MyGroups groups={groupData}></MyGroups>\n                        </div>\n                      </Col>\n                    )}\n                </Row>\n                <div>\n                  <Button id=\"btnShare\" data-testid=\"btnShare\" className=\"correct-margin\" onClick={handleFriends}>\n                    {t(\"share.shareTrack\")}\n                  </Button>\n                </div>\n              </form>\n            )}\n        </div>\n      </div>\n      <NotificationContainer/>\n    </section>\n  );\n};\n\nexport default SharePanel;","import auth from \"solid-auth-client\";\nimport FC from \"solid-file-client\";\nimport ldflex from \"@solid/query-ldflex\";\nimport AbstractService from \"./AbstractService\";\n\nexport default class ShareService extends AbstractService{\n\n  constructor() {\n    super();\n    this.user = null;\n    this.friends = [];\n    this.error = null;\n    this.errorLoad = null;\n    this.successShare = false;\n    this.warning = false;\n    this.success = null;\n    this.urlRouteInPod = null;\n    this.routes = [];\n    this.userFriend = \"\";\n    this.HTMLElement = null;\n    this.content = null;\n    this.session = null;\n    this.webId = null;\n    this.urlRouteInOtherPod = null;\n    this.urlToCopy = null;\n  }\n\n  /**\n   * Aux method that returns the route to tracks upload in the pod.\n   */\n  async getPodRoute(){\n    await super.getSession();\n    this.urlRouteInPod = this.webId.slice(0, this.webId.length - this.viadeRoute).concat(\"viade/routes/\");\n    this.urlToCopy = this.webId.slice(0, this.webId.length - this.viadeRoute).concat(\"public/\");\n    if (this.HTMLElement !== null){\n      let selectedRouteName = this.HTMLElement.value.concat(\".json\");\n      this.urlRouteInPod = this.urlRouteInPod.concat(selectedRouteName);\n      this.urlToCopy = this.urlToCopy.concat(selectedRouteName);\n    }\n    //await getPodRoute(urlRouteInPod);\n  }\n\n  /**\n   * Method that returns tracks stored in pod\n   */\n  async getRoutesFromPod() {\n    await this.getPodRoute();\n    const fc = new FC(auth);\n    try {\n      this.content = await fc.readFolder(this.urlRouteInPod, null);\n      await this.getRoutesNames(this.content, this.extension, this.routes);\n    } catch (SFCFetchError) {\n      this.errorLoad = \"Error al cargar combo\";\n    }\n  }\n\n  async upload(fc, urlFriendPod){\n    try {\n      if (await fc.itemExists(urlFriendPod) === true){\n        let permisos = await super.readPermission(urlFriendPod);\n        if (permisos === true){\n          let selectedRouteName = this.HTMLElement.value.concat(\"\");\n          this.urlRouteInOtherPod = urlFriendPod.concat(selectedRouteName);\n          if (await fc.itemExists(this.urlRouteInOtherPod.concat(\".json\")) === false){\n            try{\n              await fc.postFile(this.urlRouteInOtherPod, this.content, \"application/json\");\n              this.successShare = true;\n            } catch (SFCFetchError){\n              this.error = \"Error en el create\";\n            }\n          } else {\n            this.warning = true;\n          }\n        } else {\n          this.error = \"Permisos denegados\";\n        }\n      } else {\n        this.error = \"Carpeta no encontrada\";\n      }\n    } catch (SFCFetchError) {\n      this.error = \"Permisos denegados\";\n    }\n  }\n\n  /**\n   * Aux method to delete the copy of the track made to share it.\n   * @param {file-client instance} fc \n   */\n  async removeCopiedTrack(fc){\n    try{\n      await fc.delete(this.urlToCopy);\n    } catch (err){\n      if (err.status === 409 || err.status === 301){\n        this.error = \"Esta borrando una carpeta\";\n      } else if (err.status === 404){\n        this.error = \"No existe el fichero a borrar\";\n      } else {\n        this.error = \"Otro error\";\n      }\n    }\n  }\n\n  /**\n   * Method that shares the track on the other user pod\n   */\n  async shareTrack(userFriend, HTMLElement) {\n    this.userFriend = userFriend;\n    this.HTMLElement = HTMLElement;\n    await this.getPodRoute();\n    const fc = new FC(auth);\n    this.content = await fc.readFile(this.urlRouteInPod, null);\n    //**copy track file at public carpet**\n    try {\n      await fc.createFile(this.urlToCopy, this.content, \"text/turtle\", {});\n    } catch (e) {\n      this.error = \"Mis permisos fallan\";\n      return;\n    }\n    //**create file at friends pod**\n    let urlFriendPod = this.userFriend.slice(0, this.userFriend.length - this.viadeRoute).concat(\"viade/shared/\");\n    await this.upload(fc, urlFriendPod);\n    //**delete copy file**\n    await this.removeCopiedTrack(fc);\n  }\n\n  /**\n   * Returns user name\n   * @param userWebId\n   * @returns {Promise<*>}\n   */\n  async getName(userWebId) {\n    return await ldflex[userWebId].name;\n  }\n}","import FC from \"solid-file-client\";\nimport auth from \"solid-auth-client\";\nimport AbstractService from \"./AbstractService\";\n\n/*\n    *****************************************\n    *                                       *\n    *   FOLLOWING THE SPECIFICATION V1.1    *\n    *                                       *\n    * ***************************************\n*/\n\nexport default class FriendGroupService extends AbstractService{\n\n  constructor() {\n    super();\n    this.groupName = null;\n    this.urlRouteInPod = \"\";\n    this.groupJsonContent = \"\";\n    this.success = false;\n    this.folderContent = null;\n    this.warning = false;\n    this.groupsNames = [];\n    this.errorLoad = null;\n    this.groupFriends = [];\n    this.content = \"\";\n  }\n\n  /**\n   * Aux method that returns the route to groups upload in the pod.\n   */\n  async getPodRoute() {\n    /*\n        15 == length(\"profile/card#me\")\n        \"viade/groups/\" == folder where the groups are stored\n    */\n    await super.getSession();\n    this.urlRouteInPod = this.webId.slice(0, this.webId.length - this.viadeRoute).concat(\"viade/groups/\");\n    if (this.groupName !== null){\n      let name = this.groupName.concat(\".json\");\n      this.urlRouteInPod = this.urlRouteInPod.concat(name);\n    }\n  }\n\n\n  /**\n   * Creates the jsonld for group\n   * @param friendsWebIds\n   */\n  generateJsonld(friendsWebIds) {\n    // Directives from jsonld file\n    let jsonld = {\"@context\" :\n          {\"@version\" : 1.1,\n            \"users\" : {\"@container\": \"@list\", \"@id\": \"schema:Person\"},\n            \"name\": { \"@id\": \"schema:name\", \"@type\": \"xs:string\" },\n            \"url\": { \"@id\": \"schema:url\", \"@type\": \"xs:string\" },\n            \"schema\": \"http://schema.org/\",\n            \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n          }};\n    // Content of jsonld\n    jsonld[\"name\"] = this.groupName;\n    let group = [];\n    for (let i = 0; i < friendsWebIds.length; i++) {\n        group.push({\"url\" : friendsWebIds[parseInt(i, 10)]});\n    }\n    jsonld[\"users\"] = group;\n    this.groupJsonContent = JSON.stringify(jsonld);\n  }\n\n  /**\n   * Creates a group in POD\n   * @param friendGroup\n   * @param friendsWebIds\n   * @returns {Promise<void>}\n   */\n  async create(friendGroup, friendsWebIds) {\n    this.groupName = friendGroup;\n    await this.getPodRoute();\n    this.generateJsonld(friendsWebIds);\n    const fc = new FC(auth);\n    try {\n      await fc.createFile(this.urlRouteInPod, this.groupJsonContent, \"text/turtle\", {});\n      this.success = true;\n    } catch(e) {\n      this.success = false;\n    }\n  }\n\n  /**\n   * Returns groups stored in POD\n   */\n  async getGroups(){\n    await this.getPodRoute();\n    const fc = new FC(auth);\n    try{\n      this.folderContent = await fc.readFolder(this.urlRouteInPod, null);\n      if (this.folderContent.length === 0){\n        this.warning = \"No hay grupos\";\n      } else {\n        for (let i = 0; i < this.folderContent.files.length; i++) {\n          this.groupsNames.push(this.folderContent.files[parseInt(i, 10)].name.slice(0, this.folderContent.files[parseInt(i, 10)].name.length - 5));\n        }\n      }\n    } catch(SFCFetchError){\n      this.errorLoad = \"Error al cargar lista de grupos\";\n    }\n  }\n\n  /**\n   * Obtains webId of my friends\n   * @returns {Promise<void>}\n   */\n  async obtainUrls() {\n    let group = JSON.parse(this.content);\n    // We obtain the webIds of the group\n    let users = group.users.length;\n    for (let i = 0; i < users; i++) {\n      let friend = group.users[parseInt(i, 10)].url;\n      this.groupFriends.push(friend);\n    }\n  }\n\n  /**\n   * Get my friends WebIds from POD\n   * @param group\n   * @returns {Promise<void>}\n   */\n  async getFriendsWebIds(group) {\n    await this.getPodRoute();\n    let url = this.urlRouteInPod.concat(group).concat(\".json\");\n    const fc = new FC(auth);\n    this.content = await fc.readFile(url, null);\n    await this.obtainUrls();\n  }\n}","import React from \"react\";\nimport \"./MyGroups.css\";\n\nexport const MyGroups = ({groups}) => {\n    return(\n        <ul data-testid=\"groupList\" className=\"ul-format\">\n            {groups.map((group, index) => {\n                return(\n                    <li name=\"groupList\" key={index}>{`${group}`}\n                    <input data-testid={\"_\".concat(String(index))} name=\"group\" className=\"ck\" type=\"checkbox\"></input></li>\n                );\n            })}\n        </ul>\n    );\n};","import React from \"react\";\nimport SharePanel from \"./children/SharePanel\";\nimport ShareService from \"../../../services/ShareService\";\nimport FriendGroupService from \"../../../services/FriendGroupService\";\nimport { useWebId } from \"@inrupt/solid-react-components\";\n\nexport const ShareTrack = () => {\n\n  const webId = useWebId();\n\n  return (\n    <SharePanel myWebId={webId} service={new ShareService()} gService={new FriendGroupService()}/>\n  );\n};\n\nexport default ShareTrack;","import FC from \"solid-file-client\";\nimport auth from \"solid-auth-client\";\nimport AbstractService from \"./AbstractService\";\n\n/*\n    *****************************************\n    *                                       *\n    *   FOLLOWING THE SPECIFICATION V1.1    *\n    *                                       *\n    * ***************************************\n*/\n\nexport default class DownloadService extends AbstractService{\n\n  constructor() {\n    super();\n    this.error = null;\n    this.HTMLElementDown = null;\n    this.HTMLElementUrlValue = null;\n    this.urlRouteInPod = \"\";\n    this.webId = \"\";\n    this.routes = [];\n    this.extension = null;\n    this.warning = null;\n    this.errorLoad = false;\n    this.success = null;\n    this.content = \"\";\n  }\n\n  /**\n   * Aux method that returns the route to tracks upload in the pod.\n   */\n  async getPodRoute() {\n    await super.getSession();\n    this.urlRouteInPod = this.webId.slice(0, this.webId.length - this.viadeRoute).concat(\"viade/routes/\");\n    if (this.HTMLElementUrlValue !== null){\n      let selectedRouteName = this.HTMLElementUrlValue.concat(\".json\");\n      this.urlRouteInPod = this.urlRouteInPod.concat(selectedRouteName);\n    }\n  }\n\n  /**\n   * Aux method to download the track\n   * @param name - name of the track to download\n   * @returns {Promise<void>}\n   */\n  async downloadTrack(name) {\n    const fc = new FC(auth);\n    let file = await fc.readFile(this.urlRouteInPod);\n    let blob = new Blob([file], { type: \"application/json\" });\n    let link = this.HTMLElementDown;\n    link.href = URL.createObjectURL(blob);\n    link.download = name + \".json\";\n    link.click();\n  }\n\n  /**\n   * Obtains the track to download\n   * @returns {Promise<void>}\n   */\n  async searchTrack(HTMLElementUrlValue, HTMLElementDown) {\n    this.HTMLElementUrlValue = HTMLElementUrlValue;\n    this.HTMLElementDown = HTMLElementDown;\n    await this.getPodRoute();\n    try {\n      await this.downloadTrack(this.HTMLElementUrlValue);\n    } catch (SFCFetchError){\n      this.error = \"Error al descargar\";\n    }\n  }\n\n  /**\n   * Method that returns my tracks stored in pod\n   */\n  async getRoutesFromPod() {\n    await this.getPodRoute();\n    const fc = new FC(auth);\n    try {\n      this.content = await fc.readFolder(this.urlRouteInPod, null);\n      await super.getRoutesNames(this.content, this.extension, this.routes);\n    } catch (SFCFetchError) {\n      this.errorLoad = true;\n    }\n  }\n}","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"react-bootstrap\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport DownloadService from \"../../../../services/DownloadService\";\nimport { Select } from \"../../../utils/select/Select\";\nimport \"./DownloadPanel.css\";\n\nexport const DownloadPanel = ({service}) => {\n\n  // Locales for i18n\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n\n  /**\n   * Loads tracks name from POD\n   */\n  async function handleLoad() {\n    let dService = service;\n    if (dService instanceof DownloadService) {\n      dService = new DownloadService();\n    }\n    await dService.getRoutesFromPod();\n    if (dService.warning !== null){\n      NotificationManager.warning(t(\"download.loadWarningMessage\"), t(\"download.loadWarningTitle\"), 3000);\n    } else if (dService.errorLoad)  {\n      NotificationManager.error(t(\"download.errorLoadMessage\"), t(\"download.errorLoadTitle\"), 3000);\n    } else {\n      NotificationManager.success(t(\"download.successLoadMessage\"), t(\"download.successLoadTitle\"), 2000);\n      setData(dService.routes);\n    }\n  }\n\n  /**\n   * Download the corresponding track entered by the user in the textField\n   */\n  async function handleDownload() {\n    let dService = service;\n    if (dService instanceof DownloadService) {\n      dService = new DownloadService();\n    }\n    await dService.searchTrack(document.getElementById(\"selectRoute\").value,\n      document.getElementById(\"downFile\"));\n    if (dService.error !== null) {\n      NotificationManager.error(t(\"download.errorMessage\"), t(\"download.errorTitle\"), 5500);\n    }\n  }\n\n  return (\n    <section data-testid=\"downloadComp\">\n      <div className=\"modal-dialog\" >\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h2 id=\"downloadTitle\" data-testid=\"titleDownloadh2\">{t(\"download.title\")}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <Button id=\"btnLoadTracksDownload\" data-testid=\"btnLoadTracks\" className=\"loadButton\" onClick={handleLoad}>\n              {t(\"download.buttonLoad\")}\n            </Button>\n            <h4 data-testid=\"instruction\" placeholder=\"e.g. track1\">{t(\"download.instruction\")}</h4>\n            <Select data-testid=\"combo\" className=\"select-load-format\" id={\"selectRoute\"} options={data}/>\n            <br/>\n          </div>\n          <div className=\"modal-footer\">\n            <a href=\"/download\" id=\"downFile\"> </a>\n            <Button id=\"btnDownload\" data-testid=\"btnDownload\" onClick={handleDownload}> {t(\"download.button\")}</Button>\n          </div>\n        </div>\n      </div>\n      <NotificationContainer/>\n    </section>\n  );\n};\n\nexport default DownloadPanel;","import React from \"react\";\nimport DownloadService from \"../../../services/DownloadService\";\nimport DownloadPanel from \"./children/DownloadPanel\";\n\nexport const DownloadTrack = () => {\n\n  return (\n    <DownloadPanel service={new DownloadService()}/>\n  );\n};\n\nexport default DownloadTrack;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport \"./Welcome.css\";\nimport {Value} from \"@solid/react\";\n\n\nexport const Welcome = () => {\n    const {t} = useTranslation();\n\n    return (\n        <section id=\"welcomeTest\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                            <img className=\"myImg\" src={process.env.PUBLIC_URL + \"/img/logoViaDe.svg\"} alt=\"Logo ViaDe\"></img>\n                        </div>\n                        <div className=\"col-sm value-format\">\n                            <h1 className=\"h1-welcome\" id=\"h1-welcome\">{t(\"welcome.welcome\")}</h1>\n                            <Value src=\"user.name\"></Value>\n                        </div>\n                        <div className=\"col-sm\">\n                            <h2 id=\"h2-welcome\" className=\"myH2\">{t(\"welcome.title\")}</h2>\n                            <ul className = \"welcomeLinks\" >\n                                <li>{t(\"welcome.presentation\")}</li>\n                                <li id = \"linkDoc\" className = \"welcomeLinkDocs\"><a\n                                    href=\"https://arquisoft.github.io/viade_es1c/docs/\">{t(\"welcome.documentation\")}</a>\n                                </li >\n                                <li id = \"linkBuild\" className = \"welcomeLinksViade\" ><a href=\"https://github.com/Arquisoft/viade_es1c\">{t(\"welcome.repository\")}</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n        </section>\n    );\n};\n\nexport default Welcome;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {LoginButton } from \"@solid/react\";\nimport \"./Login.css\";\n\nexport const Login = () => {\n    const {t} = useTranslation();\n    const publicUrl = \"url(\".concat(process.env.PUBLIC_URL).concat(\"/img/background-image.jpg\").concat(\")\");\n\n    return (\n      <div id=\"loginPane\" style={{ background: publicUrl\n              , backgroundRepeat: \"no-repeat\", height: \"100vh\", width:\"100vw\"\n              , backgroundPosition: \"center\", backgroundSize: \"cover\" }}>\n                <div className=\"Login\">\n                    <h2 className = \"loginTitle\">{t(\"login.title\")}</h2>\n                    <div >\n                        <LoginButton className=\"btn btn-primary a-solid button-login\" popup=\"https://solid.github.io/solid-auth-client/dist/popup.html\">\n                            {t(\"login.formButtonText\")}\n                        </LoginButton>\n                    </div>\n                    <a\n                        id=\"linkGetAPod\"\n                        href=\"https://solid.inrupt.com/get-a-solid-pod\"\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                        className=\"link\"\n                    >\n                        {t(\"login.solidHelp\")}\n                    </a>\n                </div>\n        </div>\n    );\n};\n\nexport default Login;","import FC from \"solid-file-client\";\nimport auth from \"solid-auth-client\";\nimport AbstractService from \"./AbstractService\";\n\n/*\n    *****************************************\n    *                                       *\n    *   FOLLOWING THE SPECIFICATION V1.1    *\n    *                                       *\n    * ***************************************\n*/\n\nexport default class NotificationsService extends AbstractService{\n\n  constructor() {\n    super();\n    this.error = false;\n  }\n\n  /**\n   * Checks inbox status\n   * @param path\n   * @returns {Promise<boolean>}\n   */\n  async checkContent(path) {\n    await super.getSession();\n    const fc = new FC(auth);\n    try {\n      let content = await fc.readFolder(path, null);\n      for (let i = 0; i < content.files.length; i++) {\n        this.extension = content.files[parseInt(i, 10)].name.split(\".\");\n        if (this.extension[this.extension.length - 1].localeCompare(\"ttl\") === 0) {\n          let file = await fc.readFile(path.concat(content.files[parseInt(i)].name), null);\n          let fileContent = String(file);\n          if (fileContent.includes(\"summary\")) {\n            return true;\n          }\n        }\n      }\n      return false;\n    } catch (e) {\n      this.error = true;\n    }\n  }\n\n  /**\n   * Returns the formatted publication date\n   * @param date\n   * @returns {*}\n   */\n  formatDates(date) {\n    let dates = date.split(\"T\");\n    let firstDate = dates[0].concat(\"\\n\"); // Day, month and year\n    let secondDate = dates[1].slice(0, dates[1].length - 1); // Hour, mins, secs\n    return firstDate.concat(secondDate);\n  }\n}","import React, {useState, useEffect} from \"react\";\nimport { Table , TableBody, TableCell, TableContainer, TableHead, TableRow,\n  Paper, Box, makeStyles, TablePagination} from \"@material-ui/core\";\nimport { useNotification } from \"@inrupt/solid-react-components\";\nimport { useTranslation } from \"react-i18next\";\nimport ReactLoading from \"react-loading\";\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport {NotificationContainer, NotificationManager} from \"react-notifications\";\nimport \"./NotificationsTable.css\";\nimport NotificationsService from \"../../../../services/NotificationsService\";\n\nlet timesNotifications = 0; // Shows notifications\nlet restartNotifications = true;  // For searcher\n\nexport const NotificationsTable = ({myWebId, service}) => {\n\n  // Hook for i18n\n  const {t} = useTranslation();\n  const [rows, setRows] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(3);\n  const [showTable, setShowTable] = useState(false);\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 200,\n    },\n  });\n  const classes = useStyles();\n  const webId = myWebId;\n  const {\n    notification,\n    fetchNotification,\n  } = useNotification(webId);\n  const [withoutNotifications, setWithoutNotifications] = useState(false);\n\n  /**\n   * Function that create the row\n   * @param N\n   * @param Notification\n   * @returns {{N: *, Notification: *}}\n   */\n  function createData(N, Notification, Time) {\n    return { N, Notification, Time };\n  }\n\n  /**\n   * Obtains the notifications from the POD\n   * and loads the hooks\n   * @returns {Promise<void>}\n   */\n  async function handleNotifications() {\n      if (typeof(webId) !== \"undefined\" && webId !== null) {\n        let userWebId = webId.replace(\"/profile/card#me\",\"/inbox/\");\n        const inboxes = [{ path: userWebId, inboxName: \"Global Inbox\", shape: \"default\" }];\n        if (service instanceof NotificationsService) {\n          service = new NotificationsService();\n        }\n        if (await service.checkContent(userWebId) === true && !service.error) {\n          await fetchNotification(inboxes);\n        } else {\n          setWithoutNotifications(true);\n        }\n        if (notification.notifications.length > 0 && restartNotifications) {\n          let rows = [];\n          for (let i=0; i < notification.notifications.length; i++) {\n            rows.push(createData(i+1, notification.notifications[parseInt(i, 10)].summary,\n              service.formatDates(notification.notifications[parseInt(i, 10)].published)));\n          }\n          setRows(rows);\n          setShowTable(true);\n          if (timesNotifications === 0) {\n            timesNotifications++;\n            NotificationManager.info(t(\"notifications.infoMessage1\").concat(rows.length).concat(t(\"notifications.infoMessage2\"))\n              , t(\"notifications.infoTitle\"), 3000);\n          }\n        }\n      }\n  }\n\n  /**\n   * Function that shows a loading component while notifications are being obtained\n   * @param Component\n   * @returns {WithLoadingComponent}\n   * @constructor\n   */\n  function withLoading(Component) {\n    return function WithLoadingComponent({ isLoading, ...props }) {\n      if (!isLoading){\n        return (<Component {...props} />);\n      } \n      return (<div align=\"center\">\n        <ReactLoading type={\"spin\"} color={\"#5FB0FF\"} height={\"10%\"} width={\"10%\"}/>\n        <br/>\n        <p>{t(\"notifications.loadingNotifications\")}</p>\n      </div>);\n    };\n  }\n\n  // Loading box\n  const BoxWithLoading = withLoading(Box);\n\n  /**\n   * Search notifications by input\n   */\n  function searchNotifications() {\n    if (notification.notifications.length > 0) {\n      let searchInput = document.getElementById(\"searchInput\").value;\n      if (searchInput.localeCompare(\"\") !== 0) {\n        if (service instanceof NotificationsService) {\n          service = new NotificationsService();\n        }\n        let notifications = [];\n        for (let i=0; i < notification.notifications.length; i++) {\n          if (notification.notifications[parseInt(i)].summary.toUpperCase().includes(searchInput.toUpperCase())) {\n            restartNotifications = false;\n            notifications.push(createData(i+1, notification.notifications[parseInt(i, 10)].summary,\n              service.formatDates(notification.notifications[parseInt(i, 10)].published)));\n          }\n        }\n        if (notifications.length === 0) {\n          restartNotifications = false;\n          NotificationManager.error(t(\"notifications.errorMessage\")\n            , t(\"notifications.errorTitle\"), 3000);\n        }\n        setRows(notifications);\n      } else {\n        restartNotifications = true;\n      }\n    }\n  }\n\n  /**\n   * Handle page change\n   * @param event\n   * @param newPage\n   */\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  /**\n   * Handle how many rows have each page\n   * @param event\n   */\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n    handleNotifications(); // Load the hooks\n  });\n\n  return (\n    <div data-testid=\"notificationTableComp\">\n      {!showTable && !withoutNotifications && (\n        <BoxWithLoading isLoading={!showTable}/>\n      )}\n      {showTable && !withoutNotifications && (\n        <div>\n          <Form data-testid=\"searchForm\" className=\"searcher\" inline>\n            <FormControl type=\"text\" placeholder=\"e.g. user1\" className=\"mr-sm-2\" id=\"searchInput\" />\n            <Button data-testid=\"btnSearch\" variant=\"primary\" onClick={searchNotifications}>{t(\"notifications.searchButton\")}</Button>\n          </Form>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} size=\"small\" aria-labelledby=\"tableTitle\" aria-label=\"enhanced table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Nº</TableCell>\n                  <TableCell align=\"right\">{t(\"notifications.value\")}</TableCell>\n                  <TableCell align=\"right\">{t(\"notifications.time\")}</TableCell>\n                </TableRow>\n              </TableHead>\n              {(<TableBody>\n                {(rowsPerPage > 0\n                    ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    : rows\n                ).map((row, index) => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={index}>\n                      <TableCell name=\"notificationList\">\n                        {row.N}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.Notification}</TableCell>\n                      <TableCell align=\"right\">{row.Time}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>)}\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[3, 6, 12]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n          <br/>\n        </div>\n      )}\n      {withoutNotifications && (\n        <u data-testid=\"errorMessage\">{t(\"notifications.problemLoading\")}</u>\n      )}\n      <NotificationContainer/>\n    </div>\n  );\n};\n\nexport default NotificationsTable;\n","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport NotificationsTable  from \"./children/NotificationsTable\";\nimport \"./VisualizeNotifications.css\";\nimport { useWebId } from \"@inrupt/solid-react-components\";\nimport NotificationsService from \"../../../services/NotificationsService\";\n\nexport const VisualizeNotifications = () => {\n  // Hook for i18n\n  const {t} = useTranslation();\n  const webId = useWebId();\n\n  return (\n    <section>\n        <div className=\"modal-div\">\n          <div className=\"modal-appearance\">\n            <div className=\"modal-header\">\n              <h2>{t(\"notifications.title\")}</h2>\n            </div>\n            <div className=\"modal-body\">\n              <NotificationsTable myWebId={webId} service={new NotificationsService()}/>\n            </div>\n          </div>\n        </div>\n    </section>\n  );\n};\n\nexport default VisualizeNotifications;","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"react-bootstrap\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport FriendList from \"../../../../utils/friendList/FriendList\";\nimport \"./MyFriends.css\";\nimport { useNotification } from \"@inrupt/solid-react-components\";\n\n\n\nexport const MyFriends = ({ myWebId, service }) => {\n\n  // i18n locales\n  const { t } = useTranslation();\n  const webId = myWebId;\n  const { createNotification, discoverInbox } = useNotification(\n    webId\n  );\n\n  /**\n   * Send a notification to the added / deleted user\n   * @param userWebId - WebId of the receiver\n   * @returns {Promise<void>}\n   */\n  const sendNotification = async (userWebId, content) => {\n    try {\n      const inboxUrl = await discoverInbox(userWebId);\n      if (!inboxUrl) {\n        throw new Error(\"Inbox not found\");\n      }\n      createNotification(\n        {\n          title: \"Friend notification\",\n          summary: content,\n          actor: webId\n        },\n        inboxUrl\n      );\n    } catch (ex) {\n      NotificationManager.error(t(\"notifications.notificationErrorMessage\"), t(\"notifications.notificationErrorTitle\"), 3000);\n    }\n  };\n\n  /**\n   * Add a new friend\n   * @returns {Promise<void>}\n   */\n  async function addFriend() {\n    let fService = service;\n    let friendWebId = document.getElementById(\"friendId\").value;\n    let checkFriend = await fService.check(friendWebId);\n    if (typeof (friendWebId) !== \"undefined\") {\n      if (await fService.exists(friendWebId) && friendWebId.localeCompare(\"\") !== 0) {\n        if (checkFriend) {\n          NotificationManager.error(t(\"friends.checkErrorMessage\"), t(\"friends.addErrorTitle\"), 3000);\n        } else {\n          await fService.add(friendWebId);\n          if (!fService.errorAdd) {\n            let text = \"User: \".concat(webId).concat(\", added you to his/her friend list\");\n            await sendNotification(friendWebId, text);\n            window.location.reload(true);\n          } else {\n            NotificationManager.error(t(\"friends.permissionsErrorMessage\"), t(\"friends.addErrorTitle\"), 3000);\n          }\n        }\n      } else {\n        NotificationManager.error(t(\"friends.addErrorMessage\"), t(\"friends.addErrorTitle\"), 3000);\n      }\n    }\n  }\n\n  /**\n   * Delete the selected friend\n   * @returns {Promise<void>}\n   */\n  async function deleteFriend() {\n    let fService = service;\n    let friends = document.getElementsByName(\"friendList\");\n    let buttons = document.getElementsByName(\"friend\");\n    let friendsWebId = [];\n    for (let i = 0; i < buttons.length; i++) {\n      if (buttons[parseInt(i)].checked) {\n        friendsWebId.push(friends[parseInt(i)].innerText);\n      }\n    }\n    if (typeof (friendsWebId) !== \"undefined\" && friendsWebId.length > 0) {\n      for (let i = 0; i < friendsWebId.length; i++) {\n        await fService.delete(friendsWebId[parseInt(i)]);\n        if (!fService.errorDelete) {\n          let text = \"User: \".concat(webId).concat(\", deleted you from his/her friend list\");\n          await sendNotification(friendsWebId[parseInt(i)], text);\n          window.location.reload(true);\n        } else {\n          NotificationManager.error(t(\"friends.permissionsErrorMessage\"), t(\"friends.deleteErrorTitle\"), 3000);\n        }\n      }\n    } else {\n      NotificationManager.error(t(\"friends.deleteErrorMessage\"), t(\"friends.deleteErrorTitle\"), 3000);\n    }\n  }\n\n  return (\n    <div data-testid=\"friendsTest\">\n      <div className=\"modal-app\">\n        <div className=\"modal-header\">\n          <h2>{t(\"friends.title\")}</h2>\n          <hr/>\n        </div>\n        <div className=\"modal-body\">\n          <span className=\"span-friends\">{t(\"friends.addTitle\")}</span>\n          <div className=\"add-friends\">\n            <input data-testid=\"input-add\" className=\"input-add\" id=\"friendId\" type=\"text\"\n                   placeholder=\"e.g. https://user.solid.community/profile/card#me\"></input>\n            <Button id=\"btnAdd\" data-testid=\"btnAddFriend\" className=\"correct-margin\" onClick={addFriend}>\n              {t(\"friends.add\")}\n            </Button>\n          </div>\n          <br/>\n          <span className=\"span-friends\">{t(\"friends.deleteTitle\")}</span>\n          <div className=\"list-friends\">\n            <FriendList src=\"user.friends\" nameList=\"friendList\" nameCk=\"friend\"></FriendList>\n          </div>\n          <div>\n            <Button id=\"deleteFriend\" data-testid=\"btnDeleteFriend\" className=\"correct-margin\" onClick={deleteFriend}>\n              {t(\"friends.delete\")}\n            </Button>\n          </div>\n        </div>\n      </div>\n      <NotificationContainer/>\n    </div>\n  );\n};\n\nexport default MyFriends;","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"react-bootstrap\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport FriendList from \"../../../../utils/friendList/FriendList\";\nimport \"./MyFriendGroups.css\";\nimport { useNotification } from \"@inrupt/solid-react-components\";\nimport FriendGroupService from \"../../../../../services/FriendGroupService\";\n\nexport const MyFriendGroups = ({ myWebId, service }) => {\n\n  // i18n locales\n  const { t } = useTranslation();\n  const webId = myWebId;\n  const { createNotification, discoverInbox } = useNotification(\n    webId\n  );\n\n  // For friends web id (create new group)\n  let friendsWebIds = [];\n\n  /**\n   * Clear all fields\n   * @param buttons\n   */\n  function clear(buttons) {\n    document.getElementById(\"groupId\").value = \"\";\n    for (let i = 0; i < buttons.length; i++) {\n      if (buttons[parseInt(i)].checked) {\n        buttons[parseInt(i)].checked = false;\n      }\n    }\n  }\n\n  /**\n   * Send a notification to the user in the new group\n   * @returns {Promise<void>}\n   */\n  const sendNotification = async (content) => {\n    try {\n      if (friendsWebIds.length > 0) {\n        for (let i = 0; i < friendsWebIds.length; i++) {\n          const inboxUrl = await discoverInbox(friendsWebIds[parseInt(i)]);\n          if (!inboxUrl) {\n            throw new Error(\"Inbox not found\");\n          }\n          createNotification(\n            {\n              title: \"Group notification\",\n              summary: content,\n              actor: webId\n            },\n            inboxUrl\n          );\n        }\n      }\n    } catch (ex) {\n      NotificationManager.error(t(\"notifications.notificationErrorMessage\"), t(\"notifications.notificationErrorTitle\"), 3000);\n    }\n  };\n\n  /**\n   * Add a new friend\n   * @returns {Promise<void>}\n   */\n  async function createGroup() {\n    let gService = service;\n    if (gService instanceof FriendGroupService) {\n      gService = new FriendGroupService();\n    }\n    let friendGroup = document.getElementById(\"groupId\").value;\n    let friends = document.getElementsByName(\"friendListGroup\");\n    let buttons = document.getElementsByName(\"friendGroup\");\n    for (let i = 0; i < buttons.length; i++) {\n      if (buttons[parseInt(i)].checked) {\n        friendsWebIds.push(friends[parseInt(i)].innerText);\n      }\n    }\n    if (typeof (friendGroup) !== \"undefined\" && friendsWebIds.length > 0) {\n      if (friendGroup.localeCompare(\"\") !== 0) {\n        await gService.create(friendGroup, friendsWebIds);\n        if (gService.success === true) {\n          NotificationManager.success(t(\"groups.createSuccessMessage1\").concat(friendGroup).concat(t(\"groups.createSuccessMessage2\")),\n            t(\"groups.createSuccessTitle\"), 3000);\n          let text = \"User: \".concat(webId).concat(\", added you to his/her group: \").concat(friendGroup);\n          await sendNotification(text);\n          friendsWebIds = [];\n          clear(buttons);\n        } else {\n          NotificationManager.error(t(\"groups.permissionsErrorMessage\"), t(\"groups.createErrorTitle\"), 3000);\n        }\n      } else {\n        NotificationManager.error(t(\"groups.createErrorMessage\"), t(\"groups.createErrorTitle\"), 3000);\n      }\n    } else {\n      NotificationManager.error(t(\"groups.createErrorMessage\"), t(\"groups.createErrorTitle\"), 3000);\n    }\n  }\n\n  return (\n    <div data-testid=\"groupTest\">\n      <div className=\"modal-app\">\n        <div className=\"modal-header\">\n          <h2>{t(\"groups.title\")}</h2>\n          <hr/>\n        </div>\n        <div className=\"modal-body\">\n          <span className=\"span-friends\">{t(\"groups.addTitle\")}</span>\n          <div className=\"add-groups\">\n            <input data-testid=\"input-create-group\" className=\"input-add\" id=\"groupId\" type=\"text\"\n                   placeholder=\"e.g. trekking\"></input>\n          </div>\n          <br/>\n          <span className=\"span-friends-group\">{t(\"groups.addToGroupTitle\")}</span>\n          <div className=\"list-friends\">\n            <FriendList src=\"user.friends\" nameList=\"friendListGroup\" nameCk=\"friendGroup\"></FriendList>\n          </div>\n          <div>\n            <Button data-testid=\"btnCreateGroup\" className=\"correct-margin\" onClick={createGroup}>\n              {t(\"groups.add\")}\n            </Button>\n          </div>\n        </div>\n      </div>\n      <NotificationContainer/>\n    </div>\n  );\n};\n\nexport default MyFriendGroups;","import ldflex from \"@solid/query-ldflex\";\nimport FC from \"solid-file-client\";\nimport auth from \"solid-auth-client\";\n\nexport default class FriendsService {\n\n  constructor() {\n    this.webId = \"\";\n    this.errorAdd = false;\n    this.errorDelete = false;\n    this.errorRequest = null;\n  }\n\n  /**\n   * Method that add a new friend\n   * @param friendWebId\n   * @returns {Promise<void>}\n   */\n  async add(friendWebId) {\n    const auth = require(\"solid-auth-client\");\n    await auth.trackSession((session) => {\n      if (!session) {\n        return;\n      } else {\n        this.webId = session.webId;\n      }\n    });\n    try {\n      await ldflex[this.webId].knows.add(ldflex[friendWebId]);\n    } catch (e) {\n      this.errorAdd = true;\n    }\n  }\n\n  /**\n   * Method that remove a friend\n   * @param friendWebId\n   * @returns {Promise<void>}\n   */\n  async delete(friendWebId) {\n    const auth = require(\"solid-auth-client\");\n    await auth.trackSession((session) => {\n      if (!session) {\n        return;\n      } else {\n        this.webId = session.webId;\n      }\n    });\n    try {\n      await ldflex[this.webId].knows.delete(ldflex[friendWebId]);\n    } catch(e) {\n      this.errorDelete = true;\n    }\n  }\n\n  /**\n   * Method that check if it's already a friend\n   * @param friendWebId\n   * @returns {Promise<void>}\n   */\n  async check(friendWebId) {\n    const auth = require(\"solid-auth-client\");\n    await auth.trackSession((session) => {\n      if (!session) {\n        return;\n      } else {\n        this.webId = session.webId;\n      }\n    });\n    for await (const friend of ldflex[this.webId].friends) {\n      if (String(friend).localeCompare(String(friendWebId)) === 0) {\n        return await true;\n      }\n    }\n    return await false;\n  }\n\n  /**\n   * Method that check if a friend exists\n   * @param friendWebId\n   * @returns {Promise<void>}\n   */\n  async exists(friendWebId) {\n    return await this.checkOrigin(friendWebId);\n  }\n\n  /**\n   * Method that check origin of a webId\n   * @param friendWebId\n   * @returns {Promise<*>}\n   */\n  async checkOrigin(friendWebId) {\n    return await this.request(async (client) => await client.itemExists(friendWebId));\n  }\n\n  /**\n   * Makes a request to the webId\n   * @param op\n   * @returns {Promise<*>}\n   */\n  async request(op) {\n    try {\n      return await op(await this.obtainSessionFc());\n    } catch (error) {\n      this.errorRequest = \"Error en la request al webId\";\n    }\n  }\n\n  /**\n   * Obtains session (if exists)\n   * @returns {Promise<SolidFileClient>}\n   */\n  async obtainSessionFc() {\n    const fc = new FC(auth);\n    let session = await auth.currentSession();\n    if (!session) {\n      session = await auth.login();\n    }\n    return fc;\n  }\n}","import React from \"react\";\nimport { useWebId } from \"@inrupt/solid-react-components\";\nimport MyFriends from \"./children/myFriends/MyFriends\";\nimport MyFriendGroups from \"./children/myFriendGroups/MyFriendGroups\";\nimport FriendsService from \"../../../services/FriendsService\";\nimport { Row, Col } from \"react-bootstrap\";\nimport FriendGroupService from \"../../../services/FriendGroupService\";\n\nexport const Friends = () => {\n  const webId = useWebId();\n\n  return (\n    <section data-testid=\"friendsTest\" style={{ overflowX : \"hidden\" }}>\n      <Row>\n        <Col>\n          <MyFriends myWebId={webId} service={new FriendsService()}/>\n        </Col>\n        <Col>\n          <MyFriendGroups myWebId={webId} service={new FriendGroupService()}/>\n        </Col>\n      </Row>\n    </section>\n  );\n};\n\nexport default Friends;","import React from \"react\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport VisualizeTrack from \"../containers/visualizeTracks/VisualizeTrack\";\nimport UploadTrack from \"../containers/uploadTracks/UploadTrack\";\nimport MyNavBar from \"../navBar/NavBar\";\nimport ShareTrack from \"../containers/shareTracks/ShareTrack\";\nimport DownloadTrack from \"../containers/downloadTracks/DownloadTrack\";\nimport Welcome from \"../containers/welcome/Welcome\";\nimport Login from \"../containers/login/Login\";\nimport VisualizeNotifications from \"../containers/visualizeNotifications/VisualizeNotifications\";\nimport { LoggedIn, LoggedOut } from \"@solid/react\";\nimport Friends from \"../containers/friends/Friends\";\n\n/**\n * It is in charge of the different routes of the application\n * and of verifying that access is allowed to certain areas of the application\n * @returns {*}\n * @constructor\n */\nexport default function Routes() {\n    return (\n        <HashRouter>\n                <LoggedIn>\n                    <MyNavBar/>\n                    <Switch>\n                        <Route exact path=\"/\" component={Welcome}/>\n                        <Route exact path=\"/welcome\" component={Welcome}/>\n                        <Route exact path=\"/visualize\" component={VisualizeTrack}/>\n                        <Route exact path=\"/upload\" component={UploadTrack}/>\n                        <Route exact path=\"/share\" component={ShareTrack}/>\n                        <Route exact path=\"/friends\" component={Friends}/>\n                        <Route exact path=\"/download\" component={DownloadTrack}/>\n                        <Route exact path=\"/notifications\" component={VisualizeNotifications}/>\n                        <Redirect to=\"/\"></Redirect>\n                    </Switch>\n                </LoggedIn>\n                <LoggedOut>\n                    <Switch>\n                        <Route exact path=\"/\" component={Login}/>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Redirect to=\"/\"></Redirect>\n                    </Switch>\n                </LoggedOut>\n        </HashRouter>\n    );\n}","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Routes from \"./components/routes/Routes\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-xhr-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nconst backendPath = new Backend(null, { loadPath: \"locales/{{lng}}/{{ns}}.json\" });\n\ni18n\n  // load translation using xhr -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(backendPath)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to the react-i18next components.\n  // Alternative use the I18nextProvider: https://react.i18next.com/components/i18nextprovider\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n    debug: false,\n    whitelist: [\"en\", \"es\"],\n    // special options for react-i18next\n    // learn more: https://react.i18next.com/components/i18next-instance\n    react: {\n      wait: true,\n      useSuspense: false\n    }\n  });\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./i18n\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}